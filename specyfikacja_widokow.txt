Zacznijmy od tego, że panel administracyjny będzie wymagał logowania. Dlatego główną stroną panelu będzie formularz zawierający pola na nazwę użytkownika oraz hasło. Nie będziemy jednak implementować żadnej autoryzacji użytkowników, ponieważ wymaga to pracy w backendzie – zamiast tego guzik "Zaloguj" będzie linkiem do kolejnego widoku.

Poza tym będziemy potrzebowali trzech głównych widoków – rezerwacji i eventów (widok dostępności), obsługa zamówień lokalnych (widok kelnera), oraz realizacja zamówień lokalnych i z dostawą (widok kuchni). W widokach dostępności i kelnera będą też widoki pokazujące pojedynczy element – np. rezerwację czy zamówienie.

Warto dodać też stronę główną panelu, w której znajdzie się podsumowanie różnych informacji (tzw. dashboard), czyli np. liczba dzisiejszych: zamówień zdalnych i lokalnych, rezerwacji i eventów.

Zacznijmy jednak od tego, że wprowadzimy zmianę, dzięki której każde zamówienie (zarówno z dostawą, jak i lokalne) będzie miało jeden z następujących statusów:

new – zamówienie w trakcie składania, jeszcze nie realizujemy,
ordered – zamówienie złożone, należy zrealizować,
ready – zamówienie przygotowane, należy dostarczyć,
in delivery – [tylko z dostawą] zamówienie w trakcie dostawy,
delivered – [tylko lokalne] zamówienie zostało dostarczone, ale jeszcze nie opłacone,
done – zamówienie zostało dostarczone i opłacone,
cancelled – zamówienie anulowane.
W przypadku zamówień z dostawą status ordered oznacza zamówienie opłacone, a w przypadku zamówień lokalnych – tylko złożone, ponieważ klient płaci po zjedzeniu. Dlatego status delivered będziemy stosować tylko w lokalu, a zamówienia z dostawą będą przeskakiwać od razu z in delivery na done. Analogicznie, kelner w restauracji nie będzie używał statusu in delivery, tylko zmieni status z ready na delivered.

Skoro znamy już cykl życia zamówienia, rozpiszmy sobie wszystkie widoki wedle ich adresów:

/ – dashboard:
liczba zrealizowanych oraz wszystkich dzisiejszych zamówień zdalnych,
liczba zrealizowanych oraz wszystkich dzisiejszych zamówień lokalnych,
liczba wszystkich dzisiejszych rezerwacji,
liczba wszystkich dzisiejszych eventów,

/login – strona logowania:
zawiera pola na nazwę użytkownika i hasło (brak funkcjonalności),
zawiera również guzik będący linkiem do strony głównej /,

/tables – widok dostępności stolików:
ten widok wygląda jak tabela (ale może być wygodniej nie robić go za pomocą <table>),
każdy stolik to jedna kolumna,
każdy wiersz to okres 30 minut,
wszystkie rezerwacje i eventy są naniesione na tę tabelę w odpowiednim miejscu,
w efekcie osiągniemy widok podobny do Kalendarza Google w widoku tygodniowym (ale kolumnami będą stoliki zamiast kolejnych dni),
po kliknięciu rezerwacji lub eventu, szczegóły pojawiają się na osobnej stronie,

/tables/booking/:id – widok pojedynczej rezerwacji:
zawiera wszystkie szczegóły tej rezerwacji (data, godzina, stolik, liczba osób, etc.),
umożliwia edycję każdego parametru rezerwacji,

/tables/event/:id – widok pojedynczego eventu:
analogiczny do widoku pojedynczej rezerwacji, może nawet korzystać z tego samego komponentu,

/ordering/ – widok kelnera:
zawiera listę stolików,
dla każdego stolika musi być guzik nowego zamówienia,
dla każdego stolika wyświetla listę aktywnych zamówień (czyli o statusie innym niż done lub cancelled),
na liście aktywnych zamówień wyświetlamy tylko podsumowanie zamówienia, czyli np. status, datę stworzenia i sumę zamówienia,
zamówienia ze statusem ready muszą być wyszczególnione, np. za pomocą koloru tła, oraz wyświetlać guzik do szybkiej zmiany statusu na delivered,
po kliknięciu w zamówienie otwiera się widok pojedynczego zamówienia /ordering/:id,

/ordering/new – widok składania zamówienia:
zawiera edytowalne informacje o zamówieniu, czyli datę stworzenia zamówienia oraz numer stolika,
data zamówienia domyślnie wyświetla się bieżąca,
numer stolika jest automatycznie wypełniony, tylko jeśli użytkownik wszedł na tę stronę za pomocą guzika w widoku /ordering,
widok zawiera menu, czyli listę produktów z ich opcjami oraz polem na notatki,
widok zawiera koszyk, czyli listę zamówionych produktów, które można usuwać, tylko jeśli zamówienie ma status ordered,
koszyk musi podliczać ceny zamówionych produktów,

/ordering/order/:id – widok pojedynczego zamówienia:
wyświetla wszystkie informacje o zamówieniu,
jeśli zamówienie ma status new, działa identycznie jak widok /ordering/new
przy każdym innym statusie nie będzie zawierał menu produktów, a z koszyka nie będzie można usuwać produktów,

/kitchen – widok kuchni:
wyświetla dwie kolumny – z listą zamówień lokalnych oraz z dostawą,
zamówienia są posortowane wedle daty złożenia zamówienia,
zamówienie wyświetla wszystkie informacje (oprócz cen), a przede wszystkim produkty z opcjami i notatkami.
Uff, sporo tego! Nie przejmuj się – będziesz realizować je po kolei, a dzięki tej specyfikacji nie pogubisz się w procesie realizacji. Możesz nawet użyć narzędzia takiego jak np. Trello, aby uporządkować je sobie i móc oznaczać statusy ich wykonania.